#include <stdio.h>

//Função: Pesquisa Binaria, com recursividade
int Pesq_binaria(int Vetor[], int inicio, int fim, int chave)
{
 
int meio;

if (inicio > fim)
{
   return -1;
	//ja passou por todo o vetor e n achou nada
}
   
meio = (fim + inicio)/2;

if (chave == Vetor[meio])
    return meio;
else if (chave < Vetor[meio])
   return Pesq_binaria(Vetor, inicio, meio-1,chave);
	//final fica sendo meio-
else
   return Pesq_binaria(Vetor, meio+1, fim , chave);
	//inicio fica sendo meio+

}



int main (void)
{

int i,  x, n, temp, menor;
	//i = entrada, x=chave/elemento a ser pesquisado, temp/menor = ajudar na ordenação bubble
int Vetor[20];
int pesquisa, ordena;

 printf("Qual o tamanho do vetor (< 20):");
	//caso seja maior que 20, teria q mudar pra long
 scanf("%d", &n);

   for (i = 0; i < n; i++)
   {
   	printf("Digite o %dº valor: ", i + 1);
    scanf("%d", &Vetor[i]);
   }

printf("\nDigite o valor a ser pesquisado: ");
scanf("%d", &x);

ordena = -1;

   do {
      ordena++;

      menor = ordena;
			//ordenação bubble sort
      for (i = ordena + 1; i < n; i++)
         if (Vetor[i] < Vetor[menor])
            menor = i;
		 	//indice com os vetores estarem sempre guardados no 'menor'

      temp = Vetor[ordena];
		 //temp p armazenar no vetor ordena.
		 //sempre joga vetor menor pro ordena, e ai vai fazendo troca pra ir armazenando
      Vetor[ordena] = Vetor[menor];
      Vetor[menor] = temp;
   }
   while (ordena < n);
   {
 	//imprimir vetor ordenado, para verificar na tela
   printf("\nVetor ordenado: \n");
   for (i = 0; i < n; i++)
      printf("%dº indice do vetor: %d\n", i+1, Vetor[i]);
  }
pesquisa = Pesq_binaria(Vetor, 0, n, x);

if (pesquisa <0)
	printf("\n Não consta o valor pesquisado. ");
	else 
	printf("\n\nO valor foi encontrado no indice %d.\n",pesquisa + 1);

return 0;
}




